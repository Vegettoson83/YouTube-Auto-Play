require('dotenv').config();
const express = require('express');
const { addonBuilder } = require('stremio-addon-sdk');
const axios = require('axios');

const API_KEY = process.env.YOUTUBE_API_KEY; // Load API key securely

const manifest = {
    id: 'community.youtube',
    version: '1.1.0',
    name: 'YouTube Auto-Play',
    description: 'Automatically play YouTube videos in Stremio',
    types: ['movie'],
    catalogs: [{ type: 'movie', id: 'youtube' }],
    resources: ['catalog', 'stream'],
    idPrefixes: ['yt:']
};

const builder = new addonBuilder(manifest);

// Fetch YouTube videos based on query
async function fetchYouTubeVideos(query) {
    const url = `https://www.googleapis.com/youtube/v3/search?part=snippet&type=video&q=${encodeURIComponent(query)}&key=${API_KEY}&maxResults=10`;
    try {
        const response = await axios.get(url);
        return response.data.items.map(item => ({
            id: `yt:${item.id.videoId}`,
            name: item.snippet.title,
            poster: item.snippet.thumbnails.high.url,
            description: item.snippet.description
        }));
    } catch (error) {
        console.error('YouTube API Error:', error.message);
        return [];
    }
}

// Catalog Handler - Allow searching for user-defined queries
builder.defineCatalogHandler(({ id, extra }) => {
    const query = extra.search || 'trending';
    return fetchYouTubeVideos(query).then(movies => ({ metas: movies }));
});

// Stream Handler - Embed YouTube videos for auto-play
builder.defineStreamHandler(({ id }) => {
    if (id.startsWith('yt:')) {
        const videoId = id.split(':')[1];
        return Promise.resolve({
            streams: [{ url: `https://www.youtube.com/embed/${videoId}?autoplay=1` }]
        });
    }
    return Promise.resolve({ streams: [] });
});

// Start server
const app = express();
app.use('/', builder.getInterface());
const PORT = process.env.PORT || 7000;
app.listen(PORT, () => {
    console.log(`YouTube Stremio Addon running at http://localhost:${PORT}/manifest.json`);
});

